1. Answer :


import java.util.Scanner;

// Book class
class Book {
    private int bookID;
    private String title;
    private String author;
    private boolean isAvailable;

    // Constructor
    public Book(int bookID, String title, String author, boolean isAvailable) {
        this.bookID = bookID;
        this.title = title;
        this.author = author;
        this.isAvailable = isAvailable;
    }

    // Getters and setters
    public int getBookID() {
        return bookID;
    }

    public String getTitle() {
        return title;
    }

    public String getAuthor() {
        return author;
    }

    public boolean isAvailable() {
        return isAvailable;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public void setAuthor(String author) {
        this.author = author;
    }

    public void setAvailable(boolean available) {
        isAvailable = available;
    }

    // Display book details
    public void display() {
        System.out.println("ID: " + bookID + ", Title: " + title + ", Author: " + author + ", Available: " + isAvailable);
    }
}

// Library class
class Library {
    private Book[] books;
    private int count;

    public Library() {
        books = new Book[5];  // Maximum 5 books for this example
        count = 0;
    }

    // Add a book
    public void addBook(Book book) {
        if (count < books.length) {
            books[count++] = book;
            System.out.println("Book added successfully.");
        } else {
            System.out.println("Library is full!");
        }
    }

    // Remove (replace) a book by ID
    public void removeBook(int bookID) {
        boolean found = false;
        for (int i = 0; i < count; i++) {
            if (books[i].getBookID() == bookID) {
                // Shift remaining books
                for (int j = i; j < count - 1; j++) {
                    books[j] = books[j + 1];
                }
                books[--count] = null;
                System.out.println("Book removed successfully.");
                found = true;
                break;
            }
        }
        if (!found) {
            System.out.println("Book ID not found.");
        }
    }

    // Search for a book
    public void searchBook(int bookID) {
        for (int i = 0; i < count; i++) {
            if (books[i].getBookID() == bookID) {
                books[i].display();
                return;
            }
        }
        System.out.println("Book not found.");
    }

    // Display all books
    public void displayBooks() {
        if (count == 0) {
            System.out.println("Library is empty.");
        } else {
            for (int i = 0; i < count; i++) {
                books[i].display();
            }
        }
    }
}

// Main class
public class BookManagementSystem {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Library library = new Library();
        int choice;

        do {
            System.out.println("\nLibrary Management Menu:");
            System.out.println("1. Add Book");
            System.out.println("2. Remove Book");
            System.out.println("3. Search Book");
            System.out.println("4. Display Books");
            System.out.println("5. Exit");
            System.out.print("Enter your choice: ");

            choice = scanner.nextInt();
            switch (choice) {
                case 1:
                    System.out.print("Enter Book ID: ");
                    int id = scanner.nextInt();
                    scanner.nextLine();  // Consume newline
                    System.out.print("Enter Title: ");
                    String title = scanner.nextLine();
                    System.out.print("Enter Author: ");
                    String author = scanner.nextLine();
                    System.out.print("Is Available (true/false): ");
                    boolean available = scanner.nextBoolean();
                    Book book = new Book(id, title, author, available);
                    library.addBook(book);
                    break;
                case 2:
                    System.out.print("Enter Book ID to remove: ");
                    int removeID = scanner.nextInt();
                    library.removeBook(removeID);
                    break;
                case 3:
                    System.out.print("Enter Book ID to search: ");
                    int searchID = scanner.nextInt();
                    library.searchBook(searchID);
                    break;
                case 4:
                    library.displayBooks();
                    break;
                case 5:
                    System.out.println("Exiting Library System. Goodbye!");
                    break;
                default:
                    System.out.println("Invalid choice. Please enter again.");
            }
        } while (choice != 5);

        scanner.close();
    }
}



      sample console output:


Library Management Menu:
1. Add Book
2. Remove Book
3. Search Book
4. Display Books
5. Exit
Enter your choice: 1
Enter Book ID: 101
Enter Title: Java Basics
Enter Author: John Doe
Is Available (true/false): true
Book added successfully.

Library Management Menu:
1. Add Book
2. Remove Book
3. Search Book
4. Display Books
5. Exit
Enter your choice: 1
Enter Book ID: 102
Enter Title: Python Essentials
Enter Author: Jane Smith
Is Available (true/false): true
Book added successfully.

Library Management Menu:
1. Add Book
2. Remove Book
3. Search Book
4. Display Books
5. Exit
Enter your choice: 4
ID: 101, Title: Java Basics, Author: John Doe, Available: true  
ID: 102, Title: Python Essentials, Author: Jane Smith, Available: true

Library Management Menu:
1. Add Book
2. Remove Book
3. Search Book
4. Display Books
5. Exit
Enter your choice: 3
Enter Book ID to search: 101
ID: 101, Title: Java Basics, Author: John Doe, Available: true

Library Management Menu:
1. Add Book
2. Remove Book
3. Search Book
4. Display Books
5. Exit
Enter your choice: 2
Enter Book ID to remove: 101
Book removed successfully.

Library Management Menu:
1. Add Book
2. Remove Book
3. Search Book
4. Display Books
5. Exit
Enter your choice: 4
ID: 102, Title: Python Essentials, Author: Jane Smith, Available: true

Library Management Menu:
1. Add Book
2. Remove Book
3. Search Book
4. Display Books
5. Exit
Enter your choice: 5
Exiting Library System. Goodbye!



2.) Answer : 

import java.util.Scanner;

// Interface with constants and abstract method
interface Taxable {
    double salesTax = 0.07;
    double incomeTax = 0.105;

    void calcTax();
}

// Employee class
class Employee implements Taxable {
    int empId;
    String name;
    double salary;

    public Employee(int empId, String name, double salary) {
        this.empId = empId;
        this.name = name;
        this.salary = salary;
    }

    @Override
    public void calcTax() {
        double tax = salary * incomeTax;
        System.out.println("Income Tax for " + name + " (ID: " + empId + "): ₹" + tax);
    }
}

// Product class
class Product implements Taxable {
    int pid;
    double price;
    int quantity;

    public Product(int pid, double price, int quantity) {
        this.pid = pid;
        this.price = price;
        this.quantity = quantity;
    }

    @Override
    public void calcTax() {
        double tax = price * salesTax;
        System.out.println("Sales Tax on product ID " + pid + ": ₹" + tax);
    }
}

// Main class
public class DriverMain {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Input for Employee
        System.out.println("Enter Employee ID:");
        int empId = scanner.nextInt();
        scanner.nextLine(); // consume newline

        System.out.println("Enter Employee Name:");
        String name = scanner.nextLine();

        System.out.println("Enter Employee Salary:");
        double salary = scanner.nextDouble();

        Employee emp = new Employee(empId, name, salary);
        emp.calcTax();

        // Input for Product
        System.out.println("\nEnter Product ID:");
        int pid = scanner.nextInt();

        System.out.println("Enter Product Price:");
        double price = scanner.nextDouble();

        System.out.println("Enter Product Quantity:");
        int quantity = scanner.nextInt();

        Product prod = new Product(pid, price, quantity);
        prod.calcTax();

        scanner.close();
    }
}


output :

Enter Employee ID:
101
Enter Employee Name:
Alice
Enter Employee Salary:
500000
Income Tax for Alice (ID: 101): ₹52500.0

Enter Product ID:
201
Enter Product Price:
200
Enter Product Quantity:
3
Sales Tax on product ID 201: ₹14.0


